'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _cheerio = require('cheerio');

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _ramda = require('ramda');

var _request = require('../request');

var _request2 = _interopRequireDefault(_request);

var _routes = require('../routes');

var _routes2 = _interopRequireDefault(_routes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var toArray = function toArray(element) {
  return element.toArray();
};

var hasNextPage = function hasNextPage(selector) {
  return (0, _ramda.not)(selector('.pagination').children().last().hasClass('disabled'));
};

var hasOrders = (0, _ramda.pipe)(function (selector) {
  return selector('ol.orders-list li.order');
}, _ramda.length, (0, _ramda.gt)(_ramda.__, 0));

var getCustomerName = function getCustomerName(selector, element) {
  return selector('.store span.store-name', element).text();
};

var getOrderNumber = function getOrderNumber(selector, element) {
  return (0, _ramda.replace)('Pedido ', '', selector('a.order-title', element).text());
};

var getOrderStatus = (0, _ramda.pipe)(function (selector, element) {
  return selector('.alert', element).text();
}, (0, _ramda.cond)([[(0, _ramda.test)(/confirmar o recebimento/), (0, _ramda.always)('shipping')], [(0, _ramda.test)(/cancelou este pedido/), (0, _ramda.always)('canceled')], [(0, _ramda.test)(/finalizada com sucesso/), (0, _ramda.always)('finished')], [(0, _ramda.test)(/finalizou o pedido/), (0, _ramda.always)('finished')], [(0, _ramda.test)(/efetuar o pagamento/), (0, _ramda.always)('waiting_payment')], [(0, _ramda.test)(/confirmação do pagamento/), (0, _ramda.always)('processing')]]));

var getOrderDate = function getOrderDate(selector, element) {
  return (0, _moment2.default)(selector('.details time', element).text(), 'DD-MM-YYYY').format('YYYY-MM-DD');
};

var toFixed = (0, _ramda.curry)(function (number, precision) {
  return number.toFixed(precision);
});

var getOrderValue = (0, _ramda.pipe)(function (selector, element) {
  return (0, _ramda.replace)(/[^0-9]/g, '', selector('span.price', element).text());
}, parseInt, (0, _ramda.divide)(_ramda.__, 100), toFixed(_ramda.__, 2));

var getOrderInfo = (0, _ramda.curry)(function (selector, element) {
  return {
    customer_name: getCustomerName(selector, element),
    order_number: getOrderNumber(selector, element),
    date: getOrderDate(selector, element),
    value: getOrderValue(selector, element),
    status: getOrderStatus(selector, element)
  };
});

var scrap = (0, _ramda.ifElse)(hasOrders, function (selector) {
  return (0, _ramda.map)(getOrderInfo(selector), toArray(selector('ol.orders-list li.order')));
}, function () {
  return [];
});

var _list = (0, _ramda.curry)(function (session, page) {
  var next = function next(selector) {
    return _list(session, (0, _ramda.inc)(page)).then((0, _ramda.concat)(scrap(selector)));
  };

  var scrapRecursive = (0, _ramda.ifElse)(hasNextPage, next, scrap);

  return _request2.default.get(session, _routes2.default.order.list(page), {}).then(_cheerio.load).then(scrapRecursive);
});

exports.default = {
  list: function list(session) {
    return function () {
      return _list(session, 1);
    };
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZXNvdXJjZXMvb3JkZXIuanMiXSwibmFtZXMiOlsidG9BcnJheSIsImVsZW1lbnQiLCJoYXNOZXh0UGFnZSIsInNlbGVjdG9yIiwiY2hpbGRyZW4iLCJsYXN0IiwiaGFzQ2xhc3MiLCJoYXNPcmRlcnMiLCJnZXRDdXN0b21lck5hbWUiLCJ0ZXh0IiwiZ2V0T3JkZXJOdW1iZXIiLCJnZXRPcmRlclN0YXR1cyIsImdldE9yZGVyRGF0ZSIsImZvcm1hdCIsInRvRml4ZWQiLCJudW1iZXIiLCJwcmVjaXNpb24iLCJnZXRPcmRlclZhbHVlIiwicGFyc2VJbnQiLCJnZXRPcmRlckluZm8iLCJjdXN0b21lcl9uYW1lIiwib3JkZXJfbnVtYmVyIiwiZGF0ZSIsInZhbHVlIiwic3RhdHVzIiwic2NyYXAiLCJsaXN0Iiwic2Vzc2lvbiIsInBhZ2UiLCJuZXh0IiwidGhlbiIsInNjcmFwUmVjdXJzaXZlIiwiZ2V0Iiwib3JkZXIiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUNBOzs7O0FBQ0E7O0FBaUJBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLFVBQVUsU0FBVkEsT0FBVTtBQUFBLFNBQVdDLFFBQVFELE9BQVIsRUFBWDtBQUFBLENBQWhCOztBQUVBLElBQU1FLGNBQWMsU0FBZEEsV0FBYztBQUFBLFNBQ2xCLGdCQUFJQyxTQUFTLGFBQVQsRUFBd0JDLFFBQXhCLEdBQW1DQyxJQUFuQyxHQUEwQ0MsUUFBMUMsQ0FBbUQsVUFBbkQsQ0FBSixDQURrQjtBQUFBLENBQXBCOztBQUdBLElBQU1DLFlBQVksaUJBQ2Q7QUFBQSxTQUFZSixTQUFTLHlCQUFULENBQVo7QUFBQSxDQURjLGlCQUdkLDBCQUFPLENBQVAsQ0FIYyxDQUFsQjs7QUFNQSxJQUFNSyxrQkFBa0IsU0FBbEJBLGVBQWtCLENBQUNMLFFBQUQsRUFBV0YsT0FBWDtBQUFBLFNBQ3RCRSxTQUFTLHdCQUFULEVBQW1DRixPQUFuQyxFQUE0Q1EsSUFBNUMsRUFEc0I7QUFBQSxDQUF4Qjs7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QUF2Qjs7QUFNQSxTQUFPLGtCQUFRTyxHQUFSLENBQVlMLE9BQVosRUFBcUIsaUJBQU9NLEtBQVAsQ0FBYVAsSUFBYixDQUFrQkUsSUFBbEIsQ0FBckIsRUFBOEMsRUFBOUMsRUFDSkUsSUFESSxnQkFFSkEsSUFGSSxDQUVDQyxjQUZELENBQVA7QUFHRCxDQWRZLENBQWI7O2tCQWdCZTtBQUNiTCxRQUFNO0FBQUEsV0FBVztBQUFBLGFBQU1BLE1BQUtDLE9BQUwsRUFBYyxDQUFkLENBQU47QUFBQSxLQUFYO0FBQUE7QUFETyxDIiwiZmlsZSI6Im9yZGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9hZCB9IGZyb20gJ2NoZWVyaW8nXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7XG4gIGFsd2F5cyxcbiAgY29uY2F0LFxuICBjb25kLFxuICBjdXJyeSxcbiAgZGl2aWRlLFxuICBndCxcbiAgaWZFbHNlLFxuICBpbmMsXG4gIGxlbmd0aCxcbiAgbWFwLFxuICBub3QsXG4gIHBpcGUsXG4gIHJlcGxhY2UsXG4gIHRlc3QsXG4gIF9fLFxufSBmcm9tICdyYW1kYSdcbmltcG9ydCByZXF1ZXN0IGZyb20gJy4uL3JlcXVlc3QnXG5pbXBvcnQgcm91dGVzIGZyb20gJy4uL3JvdXRlcydcblxuY29uc3QgdG9BcnJheSA9IGVsZW1lbnQgPT4gZWxlbWVudC50b0FycmF5KClcblxuY29uc3QgaGFzTmV4dFBhZ2UgPSBzZWxlY3RvciA9PlxuICBub3Qoc2VsZWN0b3IoJy5wYWdpbmF0aW9uJykuY2hpbGRyZW4oKS5sYXN0KCkuaGFzQ2xhc3MoJ2Rpc2FibGVkJykpXG5cbmNvbnN0IGhhc09yZGVycyA9IHBpcGUoXG4gICAgc2VsZWN0b3IgPT4gc2VsZWN0b3IoJ29sLm9yZGVycy1saXN0IGxpLm9yZGVyJyksXG4gICAgbGVuZ3RoLFxuICAgIGd0KF9fLCAwKSxcbiAgKVxuXG5jb25zdCBnZXRDdXN0b21lck5hbWUgPSAoc2VsZWN0b3IsIGVsZW1lbnQpID0+XG4gIHNlbGVjdG9yKCcuc3RvcmUgc3Bhbi5zdG9yZS1uYW1lJywgZWxlbWVudCkudGV4dCgpXG5cbmNvbnN0IGdldE9yZGVyTnVtYmVyID0gKHNlbGVjdG9yLCBlbGVtZW50KSA9PlxuICByZXBsYWNlKCdQZWRpZG8gJywgJycsIHNlbGVjdG9yKCdhLm9yZGVyLXRpdGxlJywgZWxlbWVudCkudGV4dCgpKVxuXG5jb25zdCBnZXRPcmRlclN0YXR1cyA9IHBpcGUoXG4gIChzZWxlY3RvciwgZWxlbWVudCkgPT4gc2VsZWN0b3IoJy5hbGVydCcsIGVsZW1lbnQpLnRleHQoKSxcbiAgY29uZChbXG4gICAgW3Rlc3QoL2NvbmZpcm1hciBvIHJlY2ViaW1lbnRvLyksIGFsd2F5cygnc2hpcHBpbmcnKV0sXG4gICAgW3Rlc3QoL2NhbmNlbG91IGVzdGUgcGVkaWRvLyksIGFsd2F5cygnY2FuY2VsZWQnKV0sXG4gICAgW3Rlc3QoL2ZpbmFsaXphZGEgY29tIHN1Y2Vzc28vKSwgYWx3YXlzKCdmaW5pc2hlZCcpXSxcbiAgICBbdGVzdCgvZmluYWxpem91IG8gcGVkaWRvLyksIGFsd2F5cygnZmluaXNoZWQnKV0sXG4gICAgW3Rlc3QoL2VmZXR1YXIgbyBwYWdhbWVudG8vKSwgYWx3YXlzKCd3YWl0aW5nX3BheW1lbnQnKV0sXG4gICAgW3Rlc3QoL2NvbmZpcm1hw6fDo28gZG8gcGFnYW1lbnRvLyksIGFsd2F5cygncHJvY2Vzc2luZycpXSxcbiAgXSksXG4pXG5cbmNvbnN0IGdldE9yZGVyRGF0ZSA9IChzZWxlY3RvciwgZWxlbWVudCkgPT5cbiAgbW9tZW50KFxuICAgIHNlbGVjdG9yKCcuZGV0YWlscyB0aW1lJywgZWxlbWVudCkudGV4dCgpLFxuICAgICdERC1NTS1ZWVlZJyxcbiAgKS5mb3JtYXQoJ1lZWVktTU0tREQnKVxuXG5jb25zdCB0b0ZpeGVkID0gY3VycnkoKG51bWJlciwgcHJlY2lzaW9uKSA9PiBudW1iZXIudG9GaXhlZChwcmVjaXNpb24pKVxuXG5jb25zdCBnZXRPcmRlclZhbHVlID0gcGlwZShcbiAgKHNlbGVjdG9yLCBlbGVtZW50KSA9PlxuICAgIHJlcGxhY2UoL1teMC05XS9nLCAnJywgc2VsZWN0b3IoJ3NwYW4ucHJpY2UnLCBlbGVtZW50KS50ZXh0KCkpLFxuICBwYXJzZUludCxcbiAgZGl2aWRlKF9fLCAxMDApLFxuICB0b0ZpeGVkKF9fLCAyKSxcbilcblxuY29uc3QgZ2V0T3JkZXJJbmZvID0gY3VycnkoKHNlbGVjdG9yLCBlbGVtZW50KSA9PiAoe1xuICBjdXN0b21lcl9uYW1lOiBnZXRDdXN0b21lck5hbWUoc2VsZWN0b3IsIGVsZW1lbnQpLFxuICBvcmRlcl9udW1iZXI6IGdldE9yZGVyTnVtYmVyKHNlbGVjdG9yLCBlbGVtZW50KSxcbiAgZGF0ZTogZ2V0T3JkZXJEYXRlKHNlbGVjdG9yLCBlbGVtZW50KSxcbiAgdmFsdWU6IGdldE9yZGVyVmFsdWUoc2VsZWN0b3IsIGVsZW1lbnQpLFxuICBzdGF0dXM6IGdldE9yZGVyU3RhdHVzKHNlbGVjdG9yLCBlbGVtZW50KSxcbn0pKVxuXG5jb25zdCBzY3JhcCA9IGlmRWxzZShcbiAgICBoYXNPcmRlcnMsXG4gICAgc2VsZWN0b3IgPT4gbWFwKFxuICAgICAgZ2V0T3JkZXJJbmZvKHNlbGVjdG9yKSxcbiAgICAgIHRvQXJyYXkoc2VsZWN0b3IoJ29sLm9yZGVycy1saXN0IGxpLm9yZGVyJykpLFxuICAgICksXG4gICAgKCkgPT4gW10sXG4gIClcblxuY29uc3QgbGlzdCA9IGN1cnJ5KChzZXNzaW9uLCBwYWdlKSA9PiB7XG4gIGNvbnN0IG5leHQgPSBzZWxlY3RvciA9PlxuICAgIGxpc3Qoc2Vzc2lvbiwgaW5jKHBhZ2UpKVxuICAgICAgLnRoZW4oY29uY2F0KHNjcmFwKHNlbGVjdG9yKSkpXG5cbiAgY29uc3Qgc2NyYXBSZWN1cnNpdmUgPSBpZkVsc2UoXG4gICAgaGFzTmV4dFBhZ2UsXG4gICAgbmV4dCxcbiAgICBzY3JhcCxcbiAgKVxuXG4gIHJldHVybiByZXF1ZXN0LmdldChzZXNzaW9uLCByb3V0ZXMub3JkZXIubGlzdChwYWdlKSwge30pXG4gICAgLnRoZW4obG9hZClcbiAgICAudGhlbihzY3JhcFJlY3Vyc2l2ZSlcbn0pXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbGlzdDogc2Vzc2lvbiA9PiAoKSA9PiBsaXN0KHNlc3Npb24sIDEpLFxufVxuIl19